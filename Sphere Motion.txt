//Circular Motion for the sphere
void ComputePositionOffsets(float &fXOffset, float &fYOffset)
{
const float fLoopDuration = 25.0f;
const float fScale = 3.14159f * 2.0f / fLoopDuration;

float fElapsedTime = gluGet(GLUT_ELAPSED_TIME) / 1000.0;
float fCurrTimeThroughLoop = fmodf(fElapsedTime, fLoopDuration);

fXOffset = cosf(fCurrTimeThroughLoop*fScale)* 0.5f;
fYOffset = sinf(fCurrTimeThroughLoop*fScale)*0.5f;
}
void AdjustVertexData(float fXOffset, float fYOffset)
{
std::vector<float> fNewData(ARRAY_COUNT(vertexPositions));
memcpy(&fNewData[0], vertexPositions, sizeof(vertexPositions));

for(int iVertex = 0; iVertex < ARRAY_COUNT(vertexPositions); iVertex += 4)
{
fNewData[iVertex] += fXOffset;
fNewData[iVertex + 1] += fYOffset;
}
glBindBuffer (GL_ARRAY_BUFFER, positionBufferObject);
glBufferSubData(GL_ARRAY_BUFFER, O, sizeof(vertexPositions), &fNewData[0]);
glBindBuffer(GL_ARRAY_BUFFER, 0);
}